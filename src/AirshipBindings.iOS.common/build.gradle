ext {
    pod = 'UrbanAirship-iOS-SDK'
}

task clean(type: Delete) {
    doLast() {
        project.delete "$rootDir/Carthage"
    }
}

task syncVersion  {
    doLast() {
        ant.replaceregexp(
            file: "$rootDir/Cartfile",
            match: "\"urbanairship/ios-library\" == .*",
            replace: "\"urbanairship/ios-library\" == $airshipProperties.iosVersion"
        )
    }
}

task carthageUpdate {
    doLast() {
        exec {
            workingDir "$rootDir"
            commandLine "carthage", "update"
        }
    }
}

carthageUpdate.dependsOn('syncVersion')

task build {
}

build.dependsOn('carthageUpdate')

task carthageCheckout {
    dependsOn 'syncVersion'
    doLast() {
        exec {
            workingDir "$rootDir"
            commandLine "carthage", "checkout"
        }
    }
}

task checkoutXamboni {
    doLast() {
        // Xamboni
        def tmpDir = System.getProperty("java.io.tmpdir")
        def xamboniTempRepo = new File("${tmpDir}/xamboni")
        project.delete(files(xamboniTempRepo))

        xamboniTempRepo.deleteOnExit()

        println("Cloning Xamboni repo")
        exec {
            commandLine "git", "clone", "git@github.com:urbanairship/xamboni.git", "${xamboniTempRepo}"
        }

        checkoutXamboni.ext.repoPath = xamboniTempRepo
    }
}

task cleanXamboniRepo(type: Delete) {
    doLast() {
        def tmpDir = System.getProperty("java.io.tmpdir")
        def xamboniTempRepo = new File("${tmpDir}/xamboni")

        project.delete(files(xamboniTempRepo))
    }
}

rootProject.clean.dependsOn(project.cleanXamboniRepo)